root=true
###############################
# Core EditorConfig Options   #
###############################
# All files
[*]
indent_style = space

# XML project files
[*.{csproj,vbproj,vcxproj,vcxproj.filters,proj,projitems,shproj}]
indent_size = 2

# XML config files
[*.{props,targets,ruleset,config,nuspec,resx,vsixmanifest,vsct}]
indent_size = 2

# Code files
[*.cs]
indent_size = 4
insert_final_newline = true
charset = utf-8
###############################
# .NET Coding Conventions     #
###############################
# this. preferences
dotnet_style_qualification_for_field = false:error
dotnet_style_qualification_for_property = false:error
dotnet_style_qualification_for_method = false:error
dotnet_style_qualification_for_event = false:error
# Language keywords instead of framework type names for type references
dotnet_style_predefined_type_for_locals_parameters_members = true:error
dotnet_style_predefined_type_for_member_access = true:error
# Modifier preferences
dotnet_style_require_accessibility_modifiers = always:error
dotnet_style_readonly_field = true:silent
# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:silent
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:silent
# Expression-level preferences
dotnet_style_object_initializer = true:error
dotnet_style_collection_initializer = true:error
dotnet_style_prefer_auto_properties = true:error
dotnet_style_explicit_tuple_names = true:error
dotnet_style_prefer_inferred_tuple_names = true:error
dotnet_style_prefer_inferred_anonymous_type_member_names = true:error
dotnet_style_prefer_conditional_expression_over_assignment = true:error
dotnet_style_prefer_conditional_expression_over_return = true:error
dotnet_style_prefer_compound_assignment = true:error
dotnet_style_prefer_simplified_interpolation = true:error
dotnet_style_prefer_simplified_boolean_expressions = true:error
# Organize usings
dotnet_sort_system_directives_first = true
# Unnesecary code rules
# Simplify name
dotnet_diagnostic.IDE0001.severity = error
# Simplify member access
dotnet_diagnostic.IDE0002.severity = error
# Remove unnecessary cast
dotnet_diagnostic.IDE0004.severity = error
# Remove unnecessary import
dotnet_diagnostic.IDE0005.severity = error
# Remove unreachable code
dotnet_diagnostic.IDE0035.severity = error
# Remove unused private member
dotnet_diagnostic.IDE0051.severity = none
# Remove unread private member
dotnet_diagnostic.IDE0052.severity = error
# Remove unused expression value
dotnet_diagnostic.IDE0058.severity = error
# Remove unnecessary value assignment
dotnet_diagnostic.IDE0059.severity = error
# Remove unused parameter
dotnet_diagnostic.IDE0060.severity = error
dotnet_code_quality_unused_parameters = non_public:error
# Remove unnecessary suppression
dotnet_diagnostic.IDE0079.severity = error
# Remove unnecessary suppression operator
dotnet_diagnostic.IDE0080.severity = error
# Remove unnecessary equality operator
dotnet_diagnostic.IDE0100.severity = error
# Remove unnecessary discard
dotnet_diagnostic.IDE0110.severity = error

###############################
# Naming Conventions          #
###############################
# Locals and parameters
dotnet_naming_symbols.locals_and_parameters_symbols.applicable_kinds = parameter, local
dotnet_naming_symbols.locals_and_parameters_symbols.applicable_accessibilities = *

dotnet_naming_style.locals_and_parameters_style.capitalization = camel_case

dotnet_naming_rule.locals_and_parameters.severity = error
dotnet_naming_rule.locals_and_parameters.symbols = locals_and_parameters_symbols
dotnet_naming_rule.locals_and_parameters.style = locals_and_parameters_style

# Private members
dotnet_naming_symbols.private_members_symbols.applicable_kinds = property, field, event
dotnet_naming_symbols.private_members_symbols.applicable_accessibilities = private, private_protected, internal

dotnet_naming_style.private_members_style.capitalization = camel_case
dotnet_naming_style.private_members_style.required_prefix = _

dotnet_naming_rule.private_members.severity = error
dotnet_naming_rule.private_members.symbols = private_members_symbols
dotnet_naming_rule.private_members.style = private_members_style

# Protected members
dotnet_naming_symbols.protected_members_symbols.applicable_kinds = property, field, event
dotnet_naming_symbols.protected_members_symbols.applicable_accessibilities = protected, protected_internal

dotnet_naming_style.protected_members_style.capitalization = camel_case

dotnet_naming_rule.protected_members.severity = error
dotnet_naming_rule.protected_members.symbols = protected_members_symbols
dotnet_naming_rule.protected_members.style = protected_members_style

# Public members

dotnet_naming_symbols.public_members_symbols.applicable_kinds = property, method, field, event

dotnet_naming_style.public_members_style.capitalization = pascal_case

dotnet_naming_rule.public_members.severity = error
dotnet_naming_rule.public_members.symbols = public_members_symbols
dotnet_naming_rule.public_members.style = public_members_style

# Interfaces

dotnet_naming_symbols.interfaces_symbols.applicable_kinds = interface

dotnet_naming_style.interfaces_style.capitalization = pascal_case
dotnet_naming_style.interfaces_style.required_prefix = I

dotnet_naming_rule.interfaces.severity = error
dotnet_naming_rule.interfaces.symbols = interfaces_symbols
dotnet_naming_rule.interfaces.style = interfaces_style

# All other

dotnet_naming_symbols.all_other_symbols.applicable_kinds = *

dotnet_naming_style.all_other_style.capitalization = pascal_case

dotnet_naming_rule.all_other.severity = error
dotnet_naming_rule.all_other.symbols = all_other_symbols
dotnet_naming_rule.all_other.style = all_other_style

###############################
# C# Coding Conventions       #
###############################
# var preferences
csharp_style_var_for_built_in_types = true:error
csharp_style_var_when_type_is_apparent = true:error
csharp_style_var_elsewhere = false:error
# Expression-bodied members
csharp_style_expression_bodied_methods = when_on_single_line:error
csharp_style_expression_bodied_constructors = when_on_single_line:error
csharp_style_expression_bodied_operators = when_on_single_line:error
csharp_style_expression_bodied_properties = when_on_single_line:error
csharp_style_expression_bodied_indexers = when_on_single_line:error
csharp_style_expression_bodied_accessors = when_on_single_line:error
csharp_style_expression_bodied_lambdas = when_on_single_line:error
csharp_style_expression_bodied_local_functions = when_on_single_line:error
# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_switch_expression = true:warning
csharp_style_prefer_pattern_matching = true:silent
csharp_style_prefer_not_pattern = true:warning
# Expression-level preferences
csharp_style_inlined_variable_declaration = true:warning
csharp_prefer_simple_default_expression = true:error
csharp_style_pattern_local_over_anonymous_function = true:error
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_range_operator = true:warning
csharp_style_unused_value_expression_statement_preference = discard_variable:error
# Null-checking preferences
csharp_style_throw_expression = true:warning
csharp_style_conditional_delegate_call = true:warning
# Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
# Code block preferences
csharp_prefer_braces = when_multiline:error
# Using preferences
csharp_using_directive_placement = outside_namespace:error
csharp_style_namespace_declarations = block_scoped:error

###############################
# C# Formatting Rules         #
###############################
# New line preferences
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_between_query_expression_clauses = true
# Indentation preferences
csharp_indent_case_contents = true
csharp_indent_switch_labels = true
csharp_indent_labels = flush_left
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents_when_block = true
# Space preferences
csharp_space_after_cast = true
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_between_parentheses = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_around_binary_operators = before_and_after
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_after_comma = true
csharp_space_before_comma = false
csharp_space_after_dot = false
csharp_space_before_dot = false
csharp_space_after_semicolon_in_for_statement = true
csharp_space_before_semicolon_in_for_statement = false
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_square_brackets = false
# Wrapping preferences
csharp_preserve_single_line_statements = true
csharp_preserve_single_line_blocks = true
# Namespace properties
dotnet_style_namespace_match_folder = true


[*.Generated.cs]
generated_code = true